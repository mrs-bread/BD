Схема базы данных в PostgreSQL.
CREATE TABLE regions
    ( region_id      SERIAL primary key,       
      region_name    VARCHAR(25) 
    );

CREATE TABLE countries 
    ( country_id      CHAR(2) not null PRIMARY KEY       
    , country_name    VARCHAR(40) 
    , region_id       INTEGER  REFERENCES regions(region_id)
    ); 

CREATE TABLE locations
    ( location_id    SERIAL PRIMARY KEY
    , street_address VARCHAR(40)
    , postal_code    VARCHAR(12)
    , city       VARCHAR(30) NOT NULL        
    , state_province VARCHAR(25)
    , country_id     CHAR(2) REFERENCES countries (country_id)
    ) ;

CREATE TABLE departments
    ( department_id    SERIAL PRIMARY KEY
    , department_name  VARCHAR(30) NOT NULL        
    , manager_id       INTEGER
    , location_id      INTEGER references locations (location_id)
    ) ;

CREATE TABLE jobs
    ( job_id         VARCHAR(10) PRIMARY KEY
    , job_title      VARCHAR(35) NOT NULL
    , min_salary     NUMERIC(6)
    , max_salary     NUMERIC(6)
    ) ;

CREATE TABLE employees
    ( employee_id    SERIAL PRIMARY KEY
    , first_name     VARCHAR(20)
    , last_name      VARCHAR(25) NOT NULL
    , email          VARCHAR(25) NOT NULL
    , phone_number   VARCHAR(20)
    , hire_date      TIMESTAMP  NOT NULL
    , job_id         VARCHAR(10) NOT NULL REFERENCES jobs(job_id)
    , salary         NUMERIC(8,2)
    , commission_pct NUMERIC(2,2)
    , manager_id     INTEGER REFERENCES employees(employee_id)
    , department_id  INTEGER REFERENCES departments(department_id)
    , CONSTRAINT     emp_salary_min
                     CHECK (salary > 0) 
    , CONSTRAINT     emp_email_uk
                     UNIQUE (email)
    ) ;

ALTER TABLE DEPARTMENTS ADD CONSTRAINT dept_mgr_fk
                 FOREIGN KEY (manager_id)
                  REFERENCES employees (employee_id);

CREATE TABLE job_history
    ( employee_id   INTEGER NOT NULL REFERENCES employees(employee_id)
    , start_date    TIMESTAMP NOT NULL
    , end_date      TIMESTAMP NOT NULL        
    , job_id        VARCHAR(10) NOT NULL REFERENCES jobs(job_id)
    , department_id INTEGER REFERENCES departments(department_id)
    , CONSTRAINT    jhist_date_interval
                    CHECK (end_date > start_date)
    , PRIMARY KEY (employee_id, start_date)
    ) ;
Я её заполнил значниями. Твоя задача написать мне запросы следующие:
1.Показать третью по величине зарплату среди всех сотрудников
2.Отобразить город сотрудника, чей идентификатор — 105.
3.Отображение сведений о сотрудниках, получающих самую высокую зарплату в отделе.
4.Отображение сведений о текущей работе для сотрудников, которые в прошлом работали ИТ-программистами.
5.Отобразить сведения об отделах, в которых максимальная зарплата превышает 10000 для сотрудников, которые работали в прошлом.
6.Отобразить отделы, в которые за последние два года не пришел ни один сотрудник
7.Отображение имени сотрудника, должности, даты начала и окончания предыдущих мест работы всех сотрудников с нулевым процентом комиссии.
8.Display details of manager who manages more than 5 employees.
9.Отображение названия страны, города и количества отделов, в которых работает более 5 сотрудников.
10.Отображение должности и средней зарплаты сотрудников, которые работали в прошлом.
11.Отобразить сотрудников, которые в прошлом не выполняли никакой работы.
12.Отображение вакансий, на которые сотрудники устроились в текущем году.
13.Отображение сведений об отделах, которыми руководит «Смит».
14.Отображение сведений об отделах, в которых максимальная зарплата превышает 10000.
15.Укажите месяц, в котором в любом отделе, расположенном в Сиднее, появилось более 5 сотрудников.
16.Отображение названия отдела, средней заработной платы и количества сотрудников с комиссией в отделе.
17.Отображение имени сотрудника и страны, в которой он работает.
18.Отображение имени сотрудника и должности для работ, которые сотрудник выполнял в прошлом, если работа длилась менее шести месяцев.
19.Display employee name if the employee joined before his manager.
20.Отображение названия отдела, имени менеджера и зарплаты менеджера для всех менеджеров, чей опыт работы превышает 5 лет.
21.Отображение сведений о работах, выполненных любым сотрудником, чья зарплата в настоящее время превышает 15000.
22.Отображение фамилий, должностей сотрудников, имеющих комиссионный процент и относящихся к отделу 30.
23.Отображение названия должности, имени сотрудника и разницы между максимальной заработной платой по должности и заработной платой сотрудника.
24.Отображение должности и средней зарплаты сотрудников
25.Отображение должности, названия отдела, фамилии сотрудника, даты начала работы для всех должностей с 2000 по 2005 год.
26.Отображение названия страны, города и названия отдела.
